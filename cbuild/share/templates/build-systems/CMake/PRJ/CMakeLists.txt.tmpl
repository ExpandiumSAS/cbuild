cmake_minimum_required(VERSION 2.8)

project(%{ $PRJ_NAME }%)

set(CMAKE_RULE_MESSAGES OFF)
set(CMAKE_COLOR_MAKEFILE OFF)
set(CMAKE_VERBOSE_MAKEFILE OFF)

set(CMAKE_EXE_LINKER_FLAGS "%{ ${CB_LFLAGS[@]} }% %{ ${CB_BIN_LFLAGS[@]} }%")
set(CMAKE_SHARED_LINKER_FLAGS "%{ ${CB_LFLAGS[@]} }% %{ ${CB_LIB_LFLAGS[@]} }%")
set(CMAKE_MODULE_LINKER_FLAGS "%{ ${CB_LFLAGS[@]} }%")
set(CMAKE_CXX_FLAGS "%{ ${CB_GEN_FLAGS[@]} }% %{ ${CB_CXXFLAGS[@]} }%")
set(CMAKE_C_FLAGS "%{ ${CB_GEN_FLAGS[@]} }% %{ ${CB_CFLAGS[@]} }%")

add_definitions(
    -D%{ ${PRJ_NAME^^} }%_EXPORTS
    -D%{ ${CPKG_PF^^} }%
    -D%{ ${CPKG_OS^^} }%
% if [[ ${PRJ_OPTS[stack_protector]} ]]; then
    -D_FORTIFY_SOURCE=2
% fi
)

include_directories(%{ "$PRJ_GENINCDIR" }%)

install(
    DIRECTORY %{ "$PRJ_GENINCDIR/" }%
    DESTINATION include/%{ $PRJ_NAME }%
)
% if ((${#HEADER_DIRS} > 0)); then
%     for INCDIR in ${HEADER_DIRS[@]}; do

install(
    DIRECTORY %{ "$INCDIR/" }%
    DESTINATION include/%{ $PRJ_NAME }%
)
%     done
% fi
% if [ -d "$PRJ_PRIVINCDIR" ]; then

include_directories(%{ "$PRJ_PRIVINCDIR" }%)
% fi
% if [ -d "$PRJ_INCDIR" ]; then

include_directories(%{ "$PRJ_INCDIR" }%)

install(
    DIRECTORY %{ "$PRJ_INCDIR/" }%
    DESTINATION include/%{ $PRJ_NAME }%
)
% fi
% if ((${#PRJ_LIBS} > 0)); then

install(
    DIRECTORY %{ "$PRJ_BUILDDIR/pkgconfig/" }%
    DESTINATION lib/pkgconfig
)
% fi

install(
    DIRECTORY etc/
    DESTINATION /etc/%{ $PRJ_NAME }%
    OPTIONAL
)

install(
    DIRECTORY etc_/
    DESTINATION /etc
    OPTIONAL
)

install(
    DIRECTORY share/
    DESTINATION share/%{ $PRJ_NAME }%
    OPTIONAL
)

install(
    DIRECTORY share_/
    DESTINATION share
    OPTIONAL
)

install(
    PROGRAMS %{ $PRJ_BINDIR }%/%{ $PRJ_NAME }%-config
    DESTINATION bin
)

add_custom_target(
    %{ ${PRJ_NAME} }%_config_man
    ALL
    COMMAND pod2man -n %{ $PRJ_NAME }%-config %{ $PRJ_BINDIR }%/%{ $PRJ_NAME }%-config %{ $PRJ_BUILDDIR }%/man/%{ $PRJ_NAME }%-config.1
)

install(
    DIRECTORY %{ $PRJ_BUILDDIR }%/man/
    DESTINATION share/man/man1
    OPTIONAL
)

% for T in ${PRJ_LIBS[@]}; do
%     if [[ "${HLIB_TARGET_MAP[$T]}" ]]; then
%         continue
%     fi
%
add_subdirectory(libraries/%{ $T }%)
% done
% for T in ${PRJ_PLUGS[@]}; do
add_subdirectory(plugins/%{ $T }%)
% done
% for T in ${PRJ_BINS[@]}; do
add_subdirectory(binaries/%{ $T }%)
% done
% for T in ${PRJ_TSTS[@]}; do
add_subdirectory(tests/%{ $T }%)
% done

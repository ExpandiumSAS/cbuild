%{Bash}%
# -*- Bash -*-
DEB_ARCH=$(dpkg-architecture -qDEB_HOST_MULTIARCH 2>/dev/null)

declare -a LIB_DIRS=(
    "$PKG_SYSLIBDIR/$DEB_ARCH"
    "$PKG_SYSLIBDIR"
)

function lib_exists() {
    local LIB=$1

    local LIBDIR

    for LIBDIR in ${LIB_DIRS[@]}; do
        if [ -f $LIBDIR/$LIB ]; then
            return 0
        fi
    done

    return 1
}

function lib_name() {
    local LIB=$1

    LIB=${LIB##$PKG_SYSLIBDIR/$DEB_ARCH/}
    LIB=${LIB##$PKG_SYSLIBDIR/}
    LIB=${LIB##libboost_}
    LIB=${LIB%%\.so*}
    LIB=${LIB%%-mt}

    echo $LIB
}

function pc_name() {
    echo libboost_$(lib_name $1)
}

function link_name() {
    local LIB=$(lib_name $1)

    if lib_exists libboost_${LIB}-mt.so; then
        echo boost_${LIB}-mt
    else
        echo boost_${LIB}
    fi
}

function lib_deps() {
    local LIB=$1
    local LIBNAME=$(lib_name $LIB)

    local DEPS=$(
        ldd $LIB | \
        grep libboost | \
        sed -e "s/^[[:space:]]*//" | \
        cut -d ' ' -f 1 | \
        xargs
    )

    local DEP
    local -a PCDEPS

    for DEP in $DEPS; do
        PCDEPS+=($(pc_name $DEP))
    done

    echo ${PCDEPS[@]}
}

if [[ ! $BOOST_LIB ]]; then
    if ((${PRJ_AUTOLINK["BOOST"]})); then
        for LIBDIR in ${LIB_DIRS[@]}; do
            BOOST_LIBS=($(find $LIBDIR -name libboost\*-mt.so))

            if ((${#BOOST_LIBS[@]} == 0)); then
                # Try non-multithreaded
                BOOST_LIBS=($(find $LIBDIR -name libboost\*.so))
            fi

            if ((${#BOOST_LIBS[@]} != 0)); then
                break
            fi
        done

        OPTS["recall-foreach"]="BOOST_LIB ${BOOST_LIBS[@]}"
        OPTS["label"]="generating Boost pkg-config support files"
    else
        OPTS["process"]=0
    fi
else
    LIB=$(lib_name $BOOST_LIB)
    OPTS["rename-to"]=$(pc_name $BOOST_LIB).pc
%{/Bash}%
Name: %{ $LIB }%
Description: Boost %{ $LIB }% library
Version: 1
Requires: %{ $(lib_deps $BOOST_LIB) }%
Libs: %{ -l$(link_name $BOOST_LIB) }%
% fi
